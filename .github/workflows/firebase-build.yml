name: Deploy Next.js to ngrok

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js app
        run: npm run dev
        env:
          NODE_ENV: production

      - name: Install ngrok
        run: npm install -g ngrok

      - name: Create ngrok config
        run: |
          mkdir -p ~/.config/ngrok
          echo "version: 2" > ~/.config/ngrok/ngrok.yml
          echo "authtoken: ${{ secrets.NGROK_AUTH_TOKEN }}" >> ~/.config/ngrok/ngrok.yml
          echo "region: eu" >> ~/.config/ngrok/ngrok.yml

      - name: Start Next.js and ngrok
        run: |
          # Uruchom Next.js w tle
          npm run start &

          # Zapisz PID procesu
          NEXT_PID=$!

          # Poczekaj aż aplikacja się uruchomi
          sleep 10

          # Uruchom ngrok i zapisz URL do pliku
          ngrok http 3000 --log=stdout > ngrok.log &

          # Poczekaj, aż ngrok się uruchomi
          sleep 5

          # Pobierz publiczny URL ngrok
          NGROK_URL=$(grep -o 'https://.*\.ngrok-free\.app' ngrok.log | head -n 1)

          # Wypisz URL w logu
          echo "Next.js jest dostępny pod adresem: $NGROK_URL"

          # Zapisz URL jako artefakt GitHub Actions
          echo $NGROK_URL > ngrok_url.txt

      - name: Upload ngrok URL as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ngrok-url
          path: ngrok_url.txt

      # Utrzymuj proces działający przez 24 godziny (limit darmowej wersji ngrok)
      - name: Keep alive
        run: |
          # Utrzymuj działanie przez 23 godziny (aby mieć margines bezpieczeństwa)
          sleep 82800
